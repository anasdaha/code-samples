{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

{% set rendered_content = content|without(
  'field_content_with_sidebar',
  'field_content',
  'field_designation',
  'field_email',
  'field_faculty_department',
  'field_media_image',
  'field_phone',
  'field_short_description',
  'field_program_college',
  'field_program_major',
  'field_program',
  'field_first_name',
  'field_last_name',
  'field_optional_link',
  'field_short_bio'
  ) %}


<article{{ attributes.addClass(classes) }} >

  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <div{{ content_attributes }} id="content">
    <div class="flush">
      {{ drupal_entity('block', 'novaspire_breadcrumbs') }}
    </div>
    <div class="container block-sm flush" data-animate data-animation="fade-in-down">
      <h1>{{ content.field_first_name|render|striptags|trim|raw }} {{ content.field_last_name|render|striptags|trim|raw }}</h1>
      <div class="FacultyCard">
        <div class="grid grid--two-thirds reverse">
          <div class="flush">
            {{ content.field_media_image|render }}
          </div>
          <div class="flush FacultyCard__details">
            {% if content.field_optional_link|render %}
              <div class="FacultyCard__department h4">
                <a href="{{ content.field_optional_link[0]['#url'] }}">{{ content.field_optional_link[0]['#title'] }}</a>
              </div>
            {% endif %}
            {% if content.field_designation|render %}
              <p class="FacultyCard__title h4">{{ content.field_designation|render|striptags|trim|raw }}</p>
            {% endif %}
            {% if content.field_phone|render %}
              <p><a href="tel:{{ content.field_phone|render|striptags|trim|replace({'-': ''})|replace({'(': ''})|replace({')': ''})|replace({' ': ''})|raw  }}" class="Button"><span>{{ 'Phone'|t }}</span></a></p>
            {% endif %}
            {% if content.field_email|render %}
              <a href="mailto:{{ content.field_email|render|striptags|trim|raw }}" class="link-underline">{{ content.field_email|render|striptags|trim|raw }}</a>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
    <div class="container block-sm flush">
      {{ content.field_content_with_sidebar|render }}
    </div>
    <div class="container space flush"><hr class="hr-light"></div>
    <div class="block-sm flush">
      {{ content.field_content|render }}
      {{ rendered_content }}
    </div>
  </div>
</article>
