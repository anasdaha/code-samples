{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class
  ]
%}

{% set rendered_content = content|without(
  'field_taxonomy',
  'field_right_sidebar',
  'field_content_with_sidebar',
  'field_testimonial',
  'field_content',
  'field_media_image',
  'field_short_description',
  'field_program_college',
  'field_program_major',
  'field_event_type',
  'field_program',
  'field_faculty'
  ) %}

<article{{ attributes.addClass(classes) }} >

  {% if display_submitted %}
    <footer class="node__meta">
      {{ author_picture }}
      <div{{ author_attributes.addClass('node__submitted') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <div{{ content_attributes }} id="content">
    {{ drupal_entity('block', 'novaspire_breadcrumbs') }}
    <div id="main" class="main">
      <div class="content-with-sidebar">
        <div class="main__sidebar scrolled">
          {{ drupal_region('tertiary_menu') }}
          <div class="sidebar-widgets">
            <div class="Widget Widget--cta flush">
              {{ content.field_right_sidebar|render }}
            </div>
            </div>
          <span class="overlay"></span>
        </div>
        <div class="main__content">
          <div class="block-sm flush" data-animate data-animation="fade-in-down">
            {{ title_prefix }}<h1 class="news__post-title">{{ label|render|striptags|trim|raw }}</h1>{{ title_suffix }}
            <div class="meta">
              <div class="meta-date">
                {{ node.created.value|date('M d, Y') }}
                {% if content.field_event_type|render %}
                  &nbsp; Â· &nbsp;
                  {{ content.field_event_type|render }}
                {% endif %}
              </div>
            </div>
          </div>
          {{ content.field_testimonial|render }}
          {{ content.field_content_with_sidebar|render }}
        </div>
      </div>
      <div class="tertiary full-width">
        <div class="container space flush"> <hr class="hr-light"> </div>
        {{ content.field_content|render }}
        <div class="container space flush">
          {{ rendered_content }}
          <div class="NewsGrid NewsGrid--alt">
            <div class="cta-header" data-animate data-animation="fade-in-up">
              <div class="flush">
                <h2 class="cta-heading" data-animate data-animation="fade-in-up" style="margin-bottom:0">{{ 'Related News'|t }}</h2>
              </div>
              <div class="desktop"><a href="#" class="Button Button--home"><span>{{ 'Browse All News'|t }}</span></a></div>
            </div>
            <div class="NewsGrid__wrapper">
              {% set news_taxonomy_id = '' %}

              {% for term in content.field_event_type %}
                {% set term_entity = term['#options'].entity %}
                {% if term_entity %}
                  {% if news_taxonomy_id == '' %}
                    {% set news_taxonomy_id = term_entity.id %}
                  {% else %}
                    {% set news_taxonomy_id = term_entity.id ~ ', ' ~ news_taxonomy_id %}
                  {% endif %}
                {% endif %}
              {% endfor %}

              {% if news_taxonomy_id|render %}
                {{ drupal_view('related_news', 'block_2', news_taxonomy_id) }}
              {% else %}
                {{ drupal_view('related_news', 'block_1') }}
              {% endif %}
              <div class="mobile"><a href="#" class="Button"><span>{{ 'Browse All News'|t }}</span></a></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</article>
