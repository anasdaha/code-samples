{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'Feature',
    'flush',
    'Feature--highlight',
    content.field_image_on_right|render|striptags|trim == 'True' ? '' : 'Feature--flip',
    content.field_background|render|striptags|trim == 'blue' ? 'theme-blue': ''
  ]
%}

{% block paragraph %}
  <div class="{{content.field_add_space|render|striptags|trim == 'True' ? 'space' : 'flush'}}" id="collapse-item-{{paragraph.id()}}">
    <div{{ attributes.addClass(classes) }} data-animate data-animation="fade-in-up">
      {% block content %}
        {% if content.field_title|render %}
          {% if content.field_title_tag|render %}
            {% set tag = content.field_title_tag|render|striptags|trim %}
          {% else %}
            {% set tag = 'h2' %}
          {% endif %}
          <{{tag}} class="Feature__heading">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
        {% endif %}
        <div class="Feature__content">
          <div class="Feature__interior flush">
            {% if content.field_title|render %}
              <{{tag}} class="Feature__heading">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
            {% endif %}
            {% if content.field_description|render %}
              <div class="Feature__details flush">
                {{content.field_description}}
              </div>
            {% endif %}
            {% if content.field_links_list|render %}
              <ul class="Router h4 {{content.field_background|render|striptags|trim == 'blue' ? 'theme-blue': ''}}" data-animate data-animation="fade-in-right">
                {% for item in content.field_links_list['#items'] %}
                  <li><a href="{{ item.url }}" class="Router__link {{content.field_background|render|striptags|trim == 'blue' ? 'Router__link--blue': ''}}">{{ item.value.title }}<span class="Router__icon"></span></a></li>
                {% endfor %}
              </ul>
            {% endif %}
          </div>
        </div>
        <figure class="Feature__image" data-animation="{{ content.field_image_on_right|render|striptags|trim == 'True' ? 'fade-in-right' : 'fade-in-left' }}">
          {{ content.field_media_image|render }}
          {% if content.field_caption|render %}
            <figcaption class="image__caption">{{ content.field_caption|render }}</figcaption>
          {% endif %}
        </figure>
        {% if content.field_drawline_animation|render|striptags|trim == 'True' %}
          <div data-animate data-animation="fade-in-right" class="ImageSlider__grid bottom">
            <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
              <defs>
                <style>
                  .cls-1 {
                    fill: none;
                    stroke: #3dcfff;
                    stroke-width: 10px;
                  }
                </style>
              </defs>
              <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
            </svg> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
              <defs>
                <style>
                  .cls-1 {
                    fill: none;
                    stroke: #3dcfff;
                    stroke-width: 10px;
                  }
                </style>
              </defs>
              <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
            </svg> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
              <defs>
                <style>
                  .cls-1 {
                    fill: none;
                    stroke: #3dcfff;
                    stroke-width: 10px;
                  }
                </style>
              </defs>
              <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
              <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
            </svg>
          </div>
          <svg id="imagesvg" class="drawline" xmlns="http://www.w3.org/2000/svg"> <path class="imageLine" fill="#3dcfff" stroke-width="3" stroke="#3dcfff" d="M0 0 l1920 0" ></path> </svg>
        {% endif %}
        {% endblock %}
    </div>
  </div>
{% endblock paragraph %}
