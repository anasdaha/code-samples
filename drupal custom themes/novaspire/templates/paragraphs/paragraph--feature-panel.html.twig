{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'Feature',
    'flush',
    content.field_image_on_right|render|striptags|trim == 'True' ? '' : 'Feature--flip',
    content.field_background|render|striptags|trim == 'blue' ? 'theme-blue': '',
    content.field_background|render|striptags|trim == 'gray' ? 'theme-gray' : ''
  ]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }} data-animate data-animation="fade-in-up"
  {% if content.field_no_top_space|render|striptags|trim == 'True' %} 
    style="margin-top: 0"
  {% endif %}
  id="collapse-item-{{paragraph.id()}}"
  >
    {% block content %}
      {% if content.field_title|render %}
        {% if content.field_title_tag|render %}
          {% set tag = content.field_title_tag|render|striptags|trim %}
        {% else %}
          {% set tag = 'h2' %}
        {% endif %}
        <{{tag}} class="Feature__heading">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
      {% endif %}
      <div class="Feature__content">
        <div class="Feature__interior flush">
          {% if content.field_title|render %}
            <{{tag}} class="Feature__heading">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
          {% endif %}
          {% if content.field_description|render %}
            <div class="Feature__details flush">
              {{content.field_description}}
            </div>
          {% endif %}
          {% if content.field_cta|render %}
            <p class="Feature__button"><a href="{{ content.field_cta[0]['#url'] }}" class="Button {{content.field_background|render|striptags|trim == 'blue' ? 'Button--a11y'}}"><span>{{ content.field_cta[0]['#title'] }}</span></a></p>
          {% endif %}
          {% if content.field_secound_cta|render %}
            <p class="Feature__button"><a href="{{ content.field_secound_cta[0]['#url'] }}" class="link-cta">{{ content.field_secound_cta[0]['#title'] }}</a></p>
          {% endif %}
        </div>
      </div>
      <figure 
        {% if content.field_video_url|render %}
          class="Media__image" 
        {% else %}
          class="Feature__image" 
        {% endif %}
        data-animation="{{ content.field_image_on_right|render|striptags|trim == 'True' ? 'fade-in-right' : 'fade-in-left' }}">
        {{ content.field_media_image|render }}
        {% if content.field_video_url|render %}
          <a href="{{ content.field_video_url[0]['#url'] }}" data-automodal class="Media__play" aria-label="Play Video">
            <svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" x="0" y="0" version="1.1" viewBox="0 0 62 62">
              <g shape-rendering="crispEdges">
                <path fill-opacity=".8" d="M0 0h62v62H0z"></path>
                <path fill="none" stroke="#ffce01" stroke-width="3" d="M1.5 1.5h59v59h-59z"></path>
              </g>
              <path fill="#ffce01" d="M45 31 24.8 43.1V18.9L45 31z"></path>
            </svg>
          </a>
        {% endif %}
        {% if content.field_caption|render %}
          <figcaption class="image__caption">{{ content.field_caption|render }}</figcaption>
        {% endif %}
      </figure>
      {% endblock %}
    </div>
{% endblock paragraph %}
