{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'HeroCarousel'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }} id="collapse-item-{{paragraph.id()}}">
    <div class="HeroCarousel__wrapper">
      {% block content %}
        {% if content.field_media|render %}
          <div class="HeroCarousel__video flickity-fade"> 
            <video src="{{ file_url(content.field_media[0]['#media'].field_media_video_file.entity.uri.value) }}" autoplay="" loop="" muted="" playsinline=""></video> 
            <button class="hero__control"> <span class="screen-reader-text">Toggle video</span> </button> 
          </div>
        {% endif %}
        <div class="HeroCarousel__content zero"> 
          <div class="inner"> 
            <div>
              {% if content.field_title|render %}
                {% if content.field_title_tag|render %}
                  {% set tag = content.field_title_tag|render|striptags|trim %}
                {% else %}
                  {% set tag = 'h2' %}
                {% endif %}
                <{{tag}} class="HeroCarousel__heading hero" data-animate data-animation="title-one">
                  {{ content.field_title|render|striptags|trim|raw }}
                  <br>
                  <em data-animate data-animation="title-two">{{ content.field_title_second|render|striptags|trim|raw }}</em>
                </{{tag}}>
              {% endif %}
            </div>
          </div>
        </div>

        <div data-animate data-animation="title-three" class="home-hero-border"> 
          <svg class="arrow-box" data-animate xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 146 146">
            <path fill="#1E4B99" d="M146 0H0v146h146V0Z"></path>
            <path fill="#3DCFFF" fill-rule="evenodd" d="m37.963 42.531 4.534-4.571 59.134 59.624V59.237h6.412v48.803H59.641v-6.465h36.881l-58.56-59.044Z" clip-rule="evenodd"></path>
          </svg>
          <svg class="graphic-box" data-animate width="155" height="155" viewBox="2 0 157 157" fill="none" xmlns="http://www.w3.org/2000/svg" xml:space="preserve" preserveAspectRatio="none">
            <rect x="1" y="1" width="155" height="155" stroke="#3dcfff" stroke-width="2"></rect>
          </svg>
          
          {% if content.field_cta|render %}
            <a href="{{ content.field_cta[0]['#url'] }}" class="Button Button--a11y"><span>{{ content.field_cta[0]['#title'] }}</span></a>  
          {% endif %}
        </div>

        <!-- <div id="scrollElement"></div>
        <svg id="linesvg" version="1.1" id="line_2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="1900px" height="5px" xml:space="preserve">
          <path id="line" class="path2" fill="#3dcfff" stroke-width="3" stroke="#3dcfff" d="M0 0 l1850 0"/>
          </svg> -->
        <div data-animate data-animation="title-three" class="hero-grid"> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
          <defs>
            <style>
              .cls-1 {
                fill: none;
                stroke: #3dcfff;
                stroke-width: 10px;
              }
            </style>
          </defs>
          <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
        </svg> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
          <defs>
            <style>
              .cls-1 {
                fill: none;
                stroke: #3dcfff;
                stroke-width: 10px;
              }
            </style>
          </defs>
          <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
        </svg> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
          <defs>
            <style>
              .cls-1 {
                fill: none;
                stroke: #3dcfff;
                stroke-width: 10px;
              }
            </style>
          </defs>
          <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
        </svg> <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1098.65 196">
          <defs>
            <style>
              .cls-1 {
                fill: none;
                stroke: #3dcfff;
                stroke-width: 10px;
              }
            </style>
          </defs>
          <rect class="cls-1" x="6" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="187.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="368.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="550" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="731.39" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="912.78" y="6" width="181.22" height="184"></rect>
          <rect class="cls-1" x="1094" y="6" width="181.22" height="184"></rect>
        </svg> </div>
        <svg id="svg" class="drawline" xmlns="http://www.w3.org/2000/svg"> <path class="theLine" fill="#3dcfff" stroke-width="3" stroke="#3dcfff" d="M0 0 l1920 0"></path> </svg>
      {% endblock %}
    </div>
  </div>
{% endblock paragraph %}
