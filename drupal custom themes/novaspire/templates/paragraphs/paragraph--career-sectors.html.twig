{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'tabs-section'
  ]
%}

{% block paragraph %}
  <section{{ attributes.addClass(classes) }} id="collapse-item-{{paragraph.id()}}">
    {% block content %}
      <div class="cta-header" data-animate data-animation="fade-in-up">
        {% if content.field_title|render %}
          <div class="flush">
            {% if content.field_title_tag|render %}
              {% set tag = content.field_title_tag|render|striptags|trim %}
            {% else %}
              {% set tag = 'h2' %}
            {% endif %}
            <{{tag}} class="cta-heading" data-animate data-animation="fade-in-up" style="margin-bottom:0">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
          </div>
        {% endif %}
        {% if content.field_description|render %}
          <div class="cta-content">
            {{content.field_description|render}}
          </div>
        {% endif %}
      </div>
      {% if content.field_tabs|render %}
        <div class="tabs-content">
          <div class="tabs">
            <div class="inner">
              {% for key, item in content.field_tabs['#items'] %}
                <div class="tab icon-{{key}} {% if key == 0 %} active {% endif %}">
                  <a href="javascript:void(0)" data-tab="tab-{{key}}">{{ content.field_tabs[key]['#paragraph'].field_title.value|raw }}
                    {% if key == 0 %}
                      <span class="tab-active-bar"></span>
                    {% endif %}
                  </a>
                </div>
              {% endfor %}
            </div>
          </div>
          {% for key, item in content.field_tabs['#items'] %}
            <style>
              .icon-{{key}}:before {
                mask-image: url({{ file_url(content.field_tabs[key]['#paragraph'].field_svg_icon.entity.field_media_svg_1.entity.uri.value) }});
              }
            </style>
            <div class="tab-content-h {% if key == 0 %} active {% endif %}" id="tab-{{key}}">
              <div class="tab h4 tab-mobile icon-{{key}} {% if key == 0 %} active {% endif %}">
                <a href="javascript:void(0)" data-tab="tab-{{key}}">{{ content.field_tabs[key]['#paragraph'].field_title.value|raw }}</a>
                {% if key == 0 %}
                  <span class="mobile-tab-active-bar"></span>
                {% endif %}
              </div>
              <div class="tab-content">
                <div class="inner">
                  <div class="box flush">
                    {% if content.field_tabs[key]['#paragraph'].field_first_title.value|render %}
                      <h3>{{ content.field_tabs[key]['#paragraph'].field_first_title.value|raw }}</h3>
                    {% endif %}
                    <div class="cta-content">
                      {{ content.field_tabs[key]['#paragraph'].field_description.value|raw }}
                    </div>
                  </div>
                  <div class="box flush">
                    <h4>{{ 'Average Salary'|t }}</h4>
                    <div class="Stats__value"><span>{{ content.field_tabs[key]['#paragraph'].field_average_salary_amount.value|raw }}</span></div>
                  </div>
                  {{ content.field_tabs[key] }}
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      {% endif %}
  {% endblock %}
  </section>
{% endblock paragraph %}
