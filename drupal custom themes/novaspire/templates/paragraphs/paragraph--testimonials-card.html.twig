{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'TestimonialSlider__item',
    'flickity-cell'
  ]
%}

{% block paragraph %}
  <div{{ attributes.addClass(classes) }} id="collapse-item-{{paragraph.id()}}">
    {% block content %}
      <div class="TestimonialSlider__details">
        <figure class="BlockQuote__content">
          <blockquote class="BlockQuote__text flush">
              {% if content.field_title|render %}
                {% if content.field_title_tag|render %}
                  {% set tag = content.field_title_tag|render|striptags|trim %}
                {% else %}
                  {% set tag = 'h2' %}
                {% endif %}
                <{{tag}} class="TestimonialSlider__heading-style">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}><br/>
              {% endif %}
              {% if content.field_quote|render %}
                {{ '“'|t }}{{ content.field_quote|render|striptags|trim|raw }}{{ '“'|t }}
              {% endif %}
          </blockquote>
          <figcaption class="BlockQuote__meta flush">
            {% if content.field_name|render %}
              <cite>{{ content.field_name|render|striptags|trim|raw }}</cite>
            {% endif %}
            {{ content.field_designation|render|striptags|trim|raw }}
          </figcaption>
        </figure>
        {% if content.field_cta|render %}
          <p><a href="{{ content.field_cta[0]['#url'] }}" class="Button Button--a11y bg-dark" tabindex="0"><span>{{ content.field_cta[0]['#title'] }}</span></a></p>
        {% endif %}
        {% if content.field_cta|render %}
          <p><a href="{{ content.field_cta[0]['#url'] }}" class="Button bg-white" tabindex="0"><span>{{ content.field_cta[0]['#title'] }}</span></a></p>
        {% endif %}
      </div>
      {% if content.field_media_image|render %}
        <div class="TestimonialSlider__image frame" data-ratio="2:3">
          {{ content.field_media_image }}
        </div>
      {% endif %}
    {% endblock %}
  </div>
{% endblock paragraph %}
