{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    'Section'
  ]
%}
{% block paragraph %}
  <section{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="Section__main flush">      
        <div class="TestimonialStats">
          <div class="TestimonialStats__card">
            {% if content.field_blockquote[0]['#paragraph'].field_media.entity.field_media_image %}
              <figure class="Image">
                {{ content.field_blockquote }}
              </figure>
            {% endif %}
            <div class="TestimonialStats__card-content">
              {% if content.field_title|render %}
                {% if content.field_heading_tag|render %}
                  {% set tag = content.field_heading_tag|render|striptags|trim %}
                {% else %}
                  {% set tag = 'h2' %}
                {% endif %}
                <{{tag}} class="h2">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
              {% endif %}
              <blockquote>
                {{ content.field_blockquote[0]['#paragraph'].field_quote.value|raw }}
                <cite>
                  {% if content.field_blockquote[0]['#paragraph'].field_name.value|raw %}
                    <strong>{{ content.field_blockquote[0]['#paragraph'].field_name.value|raw }}</strong>
                    <br>
                  {% endif %}
                  {{ content.field_blockquote[0]['#paragraph'].field_title_department.value|raw }}
                </cite>
                {% set raw_url = content.field_blockquote[0]['#paragraph'].field_cta.value[0].uri %}
                {% if  'internal:' in raw_url %}
                  {% set url = raw_url|split(':')[1] %}
                {% elseif 'entity:' in raw_url %}
                  {% set url = path('entity.node.canonical', {'node': raw_url|split(':')[1]|split('/')[1]}) %}
                {% else %}
                  {% set url = raw_url %}
                {% endif %}
                
                {% if url %}
                  <div class="Buttons Buttons--alt">
                    <a href="{{ blockquote_cta_file_url ? blockquote_cta_file_url : url }}" target="{{ content.field_blockquote[0]['#paragraph'].field_cta.value[0].options['attributes']['target']  }}" class="Button">{{ content.field_blockquote[0]['#paragraph'].field_cta.value[0].title }}</a> 
                  </div>
                {% endif %}
              </blockquote>
            </div>
          </div>
          {% if content.field_stats_cards|render %}
            <div class="TestimonialStats__list">
              {% for key, item in content.field_stats_cards['#items'] %}
                {{ content.field_stats_cards[key] }}
              {% endfor %}
            </div>
          {% endif %}
        </div>
        {{ content|without('field_stats_cards', 'field_testimonial', 'field_title', 'field_heading_tag', 'field_blockquote') }}
      </div>
    {% endblock %}
  </section>
{% endblock paragraph %}
