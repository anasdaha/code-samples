{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% block paragraph %}
  {% block content %}
    <div class="ResearchPanel__content">
      <div class="Common flush">
        {% if content.field_eyebrow|render %}
          <p class="text-eyebrow">{{ content.field_eyebrow|render|striptags|trim|raw }}</p>
        {% endif %}
        {% if content.field_title|render %}
          {% if content.field_heading_tag|render %}
            {% set tag = content.field_heading_tag|render|striptags|trim %}
          {% else %}
            {% set tag = 'h2' %}
          {% endif %}
          <{{tag}} class="h2">{{ content.field_title|render|striptags|trim|raw }}</{{tag}}>
        {% endif %}
        {{ content.field_description|render }}
        {% if content.field_cta|render  %}
          <div class="Buttons">
            <a href="{{ cta_file_url ? cta_file_url : content.field_cta[0]['#url'] }}" target="{{ content.field_cta[0]['#url'].options['attributes']['target'] }}" class="Button">{{ content.field_cta[0]['#title'] }}</a>
          </div>
        {% endif %}
      </div>
    </div>
    <div class="ResearchPanel__fact">
      <figure class="Image">
        {{ content.field_media|render }}
      </figure>
      <div class="ResearchPanel__stat">
        {% if content.field_stat_eyebrow|render  %}
          <p class="text-eyebrow">{{ content.field_stat_eyebrow|render|striptags|trim|raw }}</p>
        {% endif %}
        <p class="text-stat text-stat--lg">
          {{ content.field_pre_stat|render|striptags|trim|raw }}
          <span data-count="{{ content.field_stat|render|striptags|trim|raw }}" data-count-start="0"></span>
          {{ content.field_post_stat|render|striptags|trim|raw }}
        </p>
        {{ content.field_caption|render }}
      </div>
    </div>
    {{ content|without(
      'field_title',
      'field_caption',
      'field_post_stat',
      'field_pre_stat',
      'field_stat',
      'field_stat_eyebrow',
      'field_media',
      'field_cta',
      'field_description',
      'field_eyebrow',
      'field_dark_theme',
      'field_heading_tag'
    ) }}
  {% endblock %}
{% endblock paragraph %}
